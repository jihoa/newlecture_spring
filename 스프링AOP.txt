AOP 강좌 01강 - AOP(Aspect Oriented Programming) 

AOP라는 녀석을 이용해보려고한다. AOP는 스프링이 아니고 방법론이다.

우리가 지금까지한것은 Object Oriented Programming 객체지향 프로그래밍에만 관심이 있었다.
즉 사용자가 원하는 사용자 원하는 업무기반의 그런 로직만 관심을 가지고있었다.

우리가 체감하지못했던 코드가 들어가고있었다. 그 코드는 사용자의 요구사항이아니라 요구를 수반하기 위한코드이다. 
개발자나 관리자가 테스트하기위해 필요한코드들이있다. 그런녀석들을 관점에따라 나눠서 만드는것인데

관점 지향 프로그래밍 > 객체 지향 프로그래밍

Primary Concern은 관점에 해당하는것으로 객체로 만들어진다. 업무들은 메서드로 만들어진다.

객체지향프로그래밍으로 사용자의 관점에해당되는 내용을 잘만들었는데, 
로그처리라든지 (로그처리를 하는이유는 성능테스트라든지 사용자가 요구했던 권한이라든지 확인하기위해서 쓴다.)
보안처리라든지 트랜잭션이라던지 기타등등의 로직은 주업무는 아니지만 사용자가 요구하는 것을 수반하려면 필요하다.

옛날에는 로그를 처리하겠다라고 하면은 소스코드를 열어서 소스코드위아래에 코드를 입력하고 지워야되면 주석처리했다가 주석해제하고했다.
코드를 직접손대야해서 코드를 가지고있어야 크로스 커팅이 가능했다.

프로그램은 흐름이니까 굳이 소스코드에 꽂지말고 주업무는 주업무(Core Concern)대로 만들고 
로그를 꽂고 싶다하면 과거에는 무식하게 꽂았는데 지금은 (Cross-cutting Concern)proxy를 통해서 호출하게해서 스프링을이용해서 쉽게 뺐다꽂았다가 가능하다.

스프링으로 구현가능하지만 자바로도 구현이 가능하다.




-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
