1강 Spring 소개와 학습안내

Spring Framework를 이용해서 웹개발을 해보자
스프링은 웹개발에서 필수이다.
스프링은 무엇이고 왜 스프링을 배워야하는지 알아보자

스프링을 쓰는이유는

dependency injection: 일반 프로그램만들면 안중요하다. 하지만 Enterprise전용으로 만들면 중요하다.
transaction management: 트랜잭션관리가 어려웠던 부분들이 있었는데 스프링이 지원한다.

이 두가지 이유때문에 사용한다.

스프링을 통해서 엔터프라이즈 어플리케이션을 만들것이다,

스프링이 담당하는 녀석들은 세가지 범주를 생각해볼수있다. 그리고 사용하는것들이다.
MVC<- DI	//느슨한 결합력과 인터페이스
트랜잭션<-AOP	
인증과 권한<-Servlet Filter

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2강 느슨한 결합력과 인터페이스

결합력이란? 

소스코드를 수정해서 유지보수를 할수있지만 그렇게하면 항상 소스코드가있어야하고 그리고 소스코드를 열었다가 배포해야되서 위험성이있다.(결합력 높음)
그러기위해서 설정파일이 필요하겠다

그리고 인터페이스라는 것을 사용하면 객체라는 녀석의 이름을 숨길수있다.

스프링하면 떠오르는 단어가 두가지가있다.
DI IOC컨테이너

다음시간에는 DI에대해서 알아볼것이다.


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

3강 DI(Dependency Injection)

스프링의 능력이 무엇이냐고 묻는다면 객체를 생성해주고 객체를 조립해주는 능력이다.
거기서 사용되는 용어가 있는데 DI,IOC Container이다.

DI라는 용어를 알아볼텐데
Dependency Injection: 종속성 주입이라고 번역되기도 하는데 부품 조립이다.


프로그램을 객체지향으로 만들게 될 경우에 프로그램을 객체들의 조립관계로 만들어진다.

A라는 녀석이 B라는 녀석을 사용하기위해서 생성해서 가진다.(일체형 has a 관계)

Composition has a(일체형 or 붙박이형) 	//결합력이 느슨하다.

class A
{
	private B b;		//B는 A의 부품
	public A(){
		b=new B();
	}
}

Association has a(조립형)			//결합력이 느슨하다.
class A
{
	private B b;		
	public A(){		//직접 생성하지않음
	}
	public void setB(B b){	//생성은 외부에서 생성해서 세팅을해서 그 객체를 사용하는 방식
		this.b=b;
	}
}

DI가 스프링을 왜 중요하게 만들었나?

어떤 방식으로 만들까? 부품을 갈아 끼우거나 업데이트를 생각하고 있다고 하면 느슨한 결합으로 조립형으로 바꿔서 만드는경우가 많다.
기업에서는 조립형을 많이 쓴다. 

B b= new B();		//Dependency(부품) 		
A a = new A();

a.setB(b);			//Injection(주입)

조립형을 쓸때에는 두가지 방식이 있는데 
1. set함수를 통해서 조립(주입)할 수도 있고
B b =new B();
A a = new A();

a.setB(b);	


2. 생성자를 통해서 조립(주입)할 수 있다.
B b =new B();
A a = new A(b);


조립할때 불편함이 있을수가 있다. 방법이있다. 조립을 해주는 서비스를 받는것이다. 조립을 해주는 서비스가 DI이다.
Spring은 이렇게 조립하는 역할을 해줄 수 있고 객체 생성 해줄수 있는 역할을 한다. 스프링이 가진 가장 기본적인 능력은 부품을 조립해주는 능력이다.
injection능력이다.

스프링을 통해서 조립해주고 우리는 그것을 가져다가 쓸것이다.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4강 IoC(Inversion Of Control) 컨테이너

스프링이 가지고있는 가장 기본적인 역할은 조립해주는것
알아야할것
DI
IOC 컨테이너

IOC컨테이너에 대해서 배워보자

스프링의 코어 능력은 부품을 조립하는 능력이다.
그러기위해서는 여러가지 부품들을 주문서에다가 입력해서 스프링에다가 줘야한다.

어떤 부품이 필요하고 어떤 조립관계를 가지는지 명세화해야하는데
xml이나 annotaion으로 주문서를 작성할수있다.

IOC컨테이너의 용도는?

주문서를 작성했으면 부품을 구입해서 박스에 담을것이다.
스프링도 주문서에 입력되어있는데로 객체를 생성해서 담을 그릇이 필요하다.

IOC컨테이너라고 부르는이유는?

부품이라는 녀석이 어떤 조립관계를 가지는지 알아야한다. 작은부품이 만들어지고 큰부품이 만들어지고 결합시킨다.(역순)
일체형일때는 큰거를 만들고 작은거 순서대로 만들어진다. 전혀 반대이다. (정방향)


결합까지되서 조립까지되서 컨테이너에 담겨진다.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5강 Depedency를 직접 Injection 하기

package spring.di;

import spring.di.entity.Exam;
import spring.di.entity.NewlecExam;
import spring.di.ui.ExamConsole;
import spring.di.ui.GridExamConsole;
import spring.di.ui.InlineExamConsole;

public class Program {

	public static void main(String[] args) {
		
		Exam exam = new NewlecExam();
		ExamConsole console =new InlineExamConsole(exam);	//DI
		//ExamConsole console =new GridExamConsole(exam);
		console.print();
	}

}
DI를 하게되면 부품을 바꾸든 부품을 사용하는 외장을 바꾸든 해야하는데
귀찮은 일이다. 그래서 스프링을 사용할것이다.


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

6강 스프링 DI 설정을 위해 이클립스 플러그인 설치하기

자바코드로 두개의 객체를 결합을할때 직접했는데 SPRING을 이용해서 DI 작업을 하는것을 알아볼것이다.
스프링에게 주문서를 작성할것인데 그 형태가 XML이나 어노테이션이다.

현장에서는 XML형태를 아직도 많이쓴다.

xml을 이용해서 작성할때 스프링이 이해하는 스프링에서 제시하는 형태로 적어야한다.
그럴려면 <bean>태그를 토시하나 안틀리고 적어야하는데 그 대신 플러그인을 설치해서 도움을 받자

eclipse help->eclipse marketplace->spring검색

스프링 4는 스프링부트이다. 밑에있는것은 Spring Tools 3 를 설치하자
스프링은 설정파일이 귀찮아서 쓰는것이다.

설치가 완료되고 di에서 new->other->spring->spring bean configuration file 
을 설정하면 xml파일이 생성된다. 부트는 자바컨피그를 기본으로 하기때문에 설정파일을 추가할수없다.


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

7강 스프링 DI 지시서 작성하기

스프링을 이용해서 DI하는 방법을 알아볼것이다.

public class Program {

	public static void main(String[] args) {
		
		
		Exam exam = new NewlecExam();
		ExamConsole console =new GridExamConsole(exam);
		console.setExam(exam);
		console.print();
	}
}

이렇게되어있는데 
		Exam exam = new NewlecExam();
		ExamConsole console =new GridExamConsole(exam);
		console.setExam(exam);
		console.print();
이 부분을 스프링이 하게 할것이다. 그래서 스프링파일을 만들고 Exam exam = new NewlecExam(); 그대로 쓰면 좋겠지만
java언어로 이루어진것이 아니기 때문에 <bean> 태그를 이용해서 생성할 개체를 지시해달라고 말한다.
<bean id="" class=""/>
class:어떤 클래스를 객체화 할건지는 class에다가 적어준다 패키지명까지 정확하게
id: 그 객체에 어떤 이름을 쓰려고하는지 지정한다.

<bean id="exam" class="spring.di.entity.NewlecExam"/> 			// 이런식으로하면 xml로 지시했다라고 할수있다.

-settings.xml

<!-- Exam exam = new NewlecExam(); -->
<bean id="exam" class="spring.di.entity.NewlecExam"/>
<!-- ExamConsole console =new GridExamConsole(exam); -->
<bean id="console" class="spring.di.ui.GridExamConsole">		// 변수명:console 클래스명:spring.di.ui.GridExamConsole
	<!-- console.setExam(exam); -->				
	<property name="exam" ref="exam" />			// 설정(세팅)을 할때는 property태그를 사용 setExam 함수 name에서 호출할것인데 set을 없애고 대문자를 소문자로 바꿨다.  세터에다가 설정할수있는타입은 두가지가있다. ref,value 설정하는 객체의 이름을 넣어줘야한다. 들어가야하는녀석이 value형이면 value에 들어가고 ref(참조하는값 spring.di.entity.NewlecExam) 이기때문에 ref에 들어간다.
</bean>
스프링에게 지시서를 넘기고 이대로 객체를 생성해서 조립해달라 라고 부탁을해야한다. 그리고 중요한것은 우리가 이 지시서를 넘길 주체를 아직 안만들었다.
다음시간에는 주체를 생성해보자


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


